{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": { "jsx": true }
  },
  "plugins": [
    "react",
    "react-native",
    "@typescript-eslint",
    "import",
    "simple-import-sort",
    "prettier"
  ],
  "extends": [
    "plugin:prettier/recommended",
    "eslint:recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-native/all",
    /// react 17 and higher
    "plugin:react/jsx-runtime"
  ],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js"],
      "rules": {
        ///Typescripts
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-empty-function": ["error"],
        "@typescript-eslint/no-explicit-any": ["warn"],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/no-namespace": [
          "error",
          { "allowDeclarations": true }
        ],
        "@typescript-eslint/no-this-alias": "off",
        "no-bitwise": ["warn", { "allow": ["~", ">>", "&"] }],
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",

        /// Import rules
        "import/no-unused-modules": [
          "error",
          {
            "unusedExports": true,
            "missingImport": true
          }
        ],
        "import/no-duplicates": ["error", { "considerQueryString": true }],
        "import/no-cycle": ["error"],
        "import/named": ["error"],

        /// react eslint
        "react/prop-types": "off",
        "react/jsx-sort-props": [
          "error",
          {
            "shorthandFirst": true,
            "shorthandLast": false,
            "ignoreCase": false,
            "locale": "en",
            "noSortAlphabetically": false,
            "reservedFirst": ["ref", "key"],
            "callbacksLast": true,
            "multiline": "last"
          }
        ],
        "react/jsx-boolean-value": ["error"],

        // react-native plugin
        "react-native/no-color-literals": ["error"],
        "react-native/no-unused-styles": 2,
        "react-native/split-platform-components": [
          1,
          {
            "androidPathRegex": "\\.android.(js|jsx|ts|tsx)$",
            "iosPathRegex": "\\.ios.(js|jsx|ts|tsx)$"
          }
        ],
        "react-native/no-raw-text": [
          2,
          {
            "skip": ["Text.Bold"]
          }
        ],

        /// pure eslint
        "no-restricted-properties": [
          "error",
          {
            "property": "__defineGetter__"
          }
        ],
        "no-undef": "off",
        "no-shadow": "off",
        "consistent-this": "off",
        "no-param-reassign": "error",
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              ["^react", "^@?\\w"],
              [
                "^(@constants)(/.*|$)",
                "^(@app)(/.*|$)"
              ],
              ["^(@navigation)(/.*|$)", "^(@screens)(/.*|$)"],
              ["^(@components)(/.*|$)", "^(@modals)(/.*|$)"],
              // Side effect imports.
              ["^\\u0000"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              [
                "^(@assets)(/.*|$)",
                "^(@themes)(/.*|$)"
              ]
            ]
          }
        ],

        "prettier/prettier": "error"
      }
    }
  ],
  "env": {
    "react-native/react-native": true
  },
  "settings": {
    "react-native/style-sheet-object-names": ["StyleSheet", "RNStyleSheet"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {}
    },
    "import/ignore": ["react-native"],
    "react": {
      "version": "detect"
    }
  }
}
